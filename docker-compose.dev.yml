services:
  postgres:
    image: postgres:17
    container_name: event-ticket-postgres
    env_file:
      - path: ./server/env/.env.postgresql
        required: true
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER:-postgres} -h localhost -d ${POSTGRES_DB:-event-ticket-db}
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
    user: postgres
    security_opt:
      - no-new-privileges:true
    networks:
      - default

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: event-ticket-server
    command: >
      sh -c 'npx tsx node_modules/.bin/node-pg-migrate up &&
            npx tsx src/db/check-tables.ts &&
            npx tsx src/db/seeds/events-seed.ts &&
            npm run dev'
    volumes:
      - ./server:/app
      - /server/node_modules
    ports:
      - '8080:8080'
    env_file:
      - path: ./server/env/.env.server
        required: true
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 500M
    security_opt:
      - no-new-privileges:true
    networks:
      - default

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: event-ticket-client
    command: npm run dev
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - '5173:5173'
    environment:
      VITE_API_URL: http://server:8080
      NODE_ENV: development
      DOCKER: true
    depends_on:
      - server
    deploy:
      resources:
        limits:
          memory: 500M
    security_opt:
      - no-new-privileges:true
    networks:
      - default

volumes:
  postgres-data:
    driver: local

networks:
  default:
    driver: bridge
